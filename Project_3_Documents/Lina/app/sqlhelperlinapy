from sqlalchemy import create_engine, text
from sqlalchemy.ext.automap import automap_base
import pandas as pd
import numpy as np
import sqlite3

class SQLHelper():
# define properties
    def __init__(self):
        self.engine = create_engine("sqlite:///Youtubedata.sqlite")


# Execute a SQL query that doesn't return results
def execute_query(conn, query):
    try:
        cursor = conn.cursor()
        cursor.execute(query)
        conn.commit()
        return cursor.lastrowid
    except sqlite3.Error as e:
        print(e)
        return None

# Execute a SQL query that returns results as a DataFrame
def execute_read_query(conn, query):
    result = None
    try:
        result = pd.read_sql_query(query, conn)
        return result
    except sqlite3.Error as e:
        print(e)
        return result

# Main code
if __name__ == '__main__':
    database = "Youtubedata.sqlite"
    connection = create_connection(database)
    
    # Query 1: Top channels by subscribers
    query1 = """
    SELECT Rank, Youtuber, subscribers, country, channel_type
    FROM my_table
    ORDER BY subscribers DESC
    LIMIT 25
    """
    df1 = execute_read_query(connection, query1)
    print("Top channels by subscribers:")
    print(df1)
    
    # Query 2: Top 25 YouTube channels by country
    user_country = 'All'
    if user_country == 'All':
        where_clause = "AND 1=1"
    else:
        where_clause = f"AND country = '{user_country}'"
    
    query2 = f"""
    SELECT Rank, Youtuber, subscribers, country, channel_type, category
    FROM my_table
    WHERE 1=1 {where_clause}
    GROUP BY country 
    ORDER BY channel_type DESC
    LIMIT 25
    """
    df2 = execute_read_query(connection, query2)
    print("Top 25 YouTube channels by country:")
    print(df2)
    
    # Query 3: Top 25 YouTube channels by the number of views
    query3 = """
    SELECT Rank, Youtuber, subscribers, video_views, country, channel_type
    FROM my_table
    GROUP BY channel_type
    ORDER BY video_views DESC
    LIMIT 25
    """
    df3 = execute_read_query(connection, query3)
    print("Top 25 YouTube channels by the number of views:")
    print(df3)
    
    # Close connection
    connection.close()